<?php
/** @noinspection PhpUnused */
declare(strict_types=1);

namespace Collectme;

use Collectme\Misc\AssetLoader;
use Collectme\Misc\Installer;
use Collectme\Misc\ShortcodeHandler;

/**
 * Shortcode identifier. Example shortcode: [collectme cause=asdf123]
 */
const SHORTCODE_TAG = 'collectme';

/**
 * Path to the directory holing the manifest.json and the assets' directory. Relative to plugin base path.
 */
const DIST_DIR = 'dist';

/**
 * Path to the manifest.json generated by vite
 */
const MANIFEST_PATH = COLLECTME_BASE_PATH . '/' . DIST_DIR . '/manifest.json';

/**
 * Handle for the JS file that holds our frontend application
 */
const FRONTEND_SCRIPT_HANDLE = 'collectme-frontend-js';

/**
 * Handle for the CSS file that holds our frontend application's styles
 */
const FRONTEND_STYLE_HANDLE = 'collectme-frontend-css';


class Collectme
{
    public function __construct(
        private readonly Installer $installer,
        private readonly ShortcodeHandler $shortcodeHandler,
        private readonly AssetLoader $assetLoader,
    )
    {
    }

    /**
     * @throws \JsonException
     */
    public function init(): void {
        $this->registerHooks();
        $this->registerShortcodes();
    }

    private function registerHooks(): void
    {
        register_activation_hook(COLLECTME_PLUGIN_NAME, [$this->installer, 'activate']);
        register_deactivation_hook(COLLECTME_PLUGIN_NAME, [$this->installer, 'deactivate']);

        add_action('wp_enqueue_scripts', [$this->assetLoader, 'enqueueAssets'], 10);

        add_filter('script_loader_tag', [$this->assetLoader, 'modifyScriptTag'], 10, 3);
    }

    private function registerShortcodes(): void {
        add_shortcode(SHORTCODE_TAG, [$this->shortcodeHandler, 'process']);
    }
}